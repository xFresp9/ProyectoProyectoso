package es.gva.edu.iesjuandegaray.valenbiciv2;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;

public class ConexionBDD extends javax.swing.JFrame {

    /**
     * Creates new form ConexionBDD
     */
    private static Connection con;
    private static Statement s;
    private static DatosJSon dJSon;
    private static int numEst = 3;
    
    private static final String driver = "com.mysql.cj.jdbc.Driver";
    private static final String user = "root";
    private static final String pass = "alumnoalumno";
    private static final String url = "jdbc:mysql://localhost:33306/valenbicibd";
    
    public ConexionBDD() {
       initComponents();
       dJSon = new DatosJSon(numEst);
       jTextFieldNumEst.setText(""+numEst);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonDatos = new javax.swing.JButton();
        jButtonConectarBDD = new javax.swing.JButton();
        jButtonAddBDD = new javax.swing.JButton();
        jButtonCerrarCxBDD = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNumEst = new javax.swing.JTextField();
        jLabelDatosEstaciones = new javax.swing.JLabel();
        jLabelEstConexBDD = new javax.swing.JLabel();
        jLabelAddBDD = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonDatos.setText("Datos");
        jButtonDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDatosActionPerformed(evt);
            }
        });

        jButtonConectarBDD.setText("Conectar");
        jButtonConectarBDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConectarBDDActionPerformed(evt);
            }
        });

        jButtonAddBDD.setText("AÃ±adir a BDD");
        jButtonAddBDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddBDDActionPerformed(evt);
            }
        });

        jButtonCerrarCxBDD.setText("Cerrar conexion");

        jLabel1.setText("Introduce el numero de estaciones a consultar: ");

        jTextFieldNumEst.setText("Num estaciones");
        jTextFieldNumEst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNumEstActionPerformed(evt);
            }
        });

        jLabelDatosEstaciones.setText("Obtener datos de la BDD");

        jLabelEstConexBDD.setText("Estado conexion:");

        jLabelAddBDD.setText("Primero Obtener Datos de estaciones y Conectar BDD");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNumEst, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButtonDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonAddBDD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonConectarBDD, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(37, 37, 37)
                                    .addComponent(jLabelEstConexBDD))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabelAddBDD))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(223, 223, 223)
                                .addComponent(jLabelDatosEstaciones))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jButtonCerrarCxBDD)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldNumEst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDatos)
                    .addComponent(jLabelDatosEstaciones))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonConectarBDD)
                    .addComponent(jLabelEstConexBDD))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddBDD)
                    .addComponent(jLabelAddBDD))
                .addGap(24, 24, 24)
                .addComponent(jButtonCerrarCxBDD))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDatosActionPerformed
        // TODO add your handling code here:
        dJSon.mostrarDatos(numEst);
        jLabelDatosEstaciones.setText("Datos de estaciones:");
        jTextArea1.setText(dJSon.getDatos());
    }//GEN-LAST:event_jButtonDatosActionPerformed

    private void jButtonAddBDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddBDDActionPerformed
        // TODO add your handling code here:
        String sentenciaSQL = "INSERT INTO historico (estacion_id, direccion, bicis_disponibles, anclajes_libres, estado_operativo, fecha_registro, ubicacion) VALUES (?,?,?,?,?,?,ST_GeomFromText(?))";
        PreparedStatement sentencia = null;
        
        for (String value : dJSon.getValues()) {
            String [] partes = value.split(", ");

            String direccion = partes[0].split(": ")[1];
            int estacion_id = Integer.parseInt(partes[1].split(": ")[1]);
            String estado_operativo = partes[2].split(": ")[1];
            int bicis_disponibles = Integer.parseInt(partes[3].split(": ")[1]);
            int anclajes_libres = Integer.parseInt(partes[4].split(": ")[1]);
            String fecha_registro = partes[5].split(": ")[1];
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
            LocalDateTime dateTime = LocalDateTime.parse(fecha_registro, formatter);
            Timestamp timestamp = Timestamp.valueOf(dateTime);

            String coordenadas = partes[6].split(": ")[1];

            String [] coords = coordenadas.split("<");

            double lat = Double.parseDouble(coords[0].split("\\(")[1]);
            double lon = Double.parseDouble(coords[1].split("\\)")[0]);

            String point = String.format(Locale.US,"POINT(%f %f)", lon, lat);

            try {
                sentencia = con.prepareStatement(sentenciaSQL);
                sentencia.setInt(1, estacion_id);
                sentencia.setString(2, direccion);
                sentencia.setInt(3, bicis_disponibles);
                sentencia.setInt(4, anclajes_libres);
                sentencia.setString(5, estado_operativo);
                sentencia.setTimestamp(6, timestamp);
                sentencia.setString(7, point);
                sentencia.executeUpdate();
            } catch (SQLException ne) {
                ne.printStackTrace();
            } finally {
                if (sentencia != null) 
                    try {
                        sentencia.close();
                    } catch (SQLException ne) {
                        ne.printStackTrace();
                    }
            }
        }
    }//GEN-LAST:event_jButtonAddBDDActionPerformed

    private void jButtonConectarBDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConectarBDDActionPerformed
        // TODO add your handling code here:
        conector();
        jButtonAddBDD.setEnabled(true);
    }//GEN-LAST:event_jButtonConectarBDDActionPerformed

    private void jTextFieldNumEstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNumEstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNumEstActionPerformed

    private void jButtonCerrarCxBDDMouseClicked(java.awt.event.MouseEvent evt) {
        try {
            // TODO AÃ±ade aquÃ­ el cÃ³digo para cerrar la conexiÃ³n con la Base de Datos
            if (con != null) {
                con.close();
                jLabelEstConexBDD.setText("");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(ConexionBDD.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void jTextFieldNumEstFocusLost(java.awt.event.FocusEvent evt) {
        // TODO add your handling code here:
        numEst = Integer.parseInt(jTextFieldNumEst.getText());
        dJSon.mostrarDatos(numEst);
        jLabelDatosEstaciones.setText("Datos estaciones:");
        jTextArea1.setText(dJSon.getDatos());
    }
    
    public void conector() {
        // Reseteamos a null la conexion a la bd
        con=null;
        try{
            Class.forName(driver);
            
            // Nos conectamos a la bd
            con= (Connection) DriverManager.getConnection(url, user, pass);
            s = con.createStatement();
           
            // Si la conexion fue exitosa mostramos un mensaje de conexion exitosa
            if (con!=null){
               jLabelEstConexBDD.setText("Conexion establecida");
            
            }
        }
        // Si la conexion NO fue exitosa mostramos un mensaje de error
        catch (ClassNotFoundException | SQLException e){
            jLabelEstConexBDD.setText("Error de conexion" + e);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConexionBDD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConexionBDD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConexionBDD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConexionBDD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConexionBDD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddBDD;
    private javax.swing.JButton jButtonCerrarCxBDD;
    private javax.swing.JButton jButtonConectarBDD;
    private javax.swing.JButton jButtonDatos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelAddBDD;
    private javax.swing.JLabel jLabelDatosEstaciones;
    private javax.swing.JLabel jLabelEstConexBDD;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldNumEst;
    // End of variables declaration//GEN-END:variables
}
